/*
Nightscout API

Own your DData with the Nightscout API

API version: 14.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Settings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Settings{}

// Settings struct for Settings
type Settings struct {
	// Default units for glucose measurements across the server.
	Units *string `json:"units,omitempty"`
	// Default time format
	TimeFormat *float32 `json:"timeFormat,omitempty"`
	// Default custom title to be displayed system wide.
	CustomTitle *string `json:"customTitle,omitempty"`
	// Should Night mode be enabled by default?
	NightMode *bool `json:"nightMode,omitempty"`
	// Default theme to be displayed system wide, `default`, `colors`, `colorblindfriendly`.
	Theme *string `json:"theme,omitempty"`
	// Default language code to be used system wide
	Language *string `json:"language,omitempty"`
	// Plugins that should be shown by default
	ShowPlugins *string `json:"showPlugins,omitempty"`
	// If Raw BG is enabled when should it be shown? `never`, `always`, `noise`
	ShowRawbg *string `json:"showRawbg,omitempty"`
	// Enabled alarm types, can be multiple
	AlarmTypes []string `json:"alarmTypes,omitempty"`
	// Enable/Disable client-side Urgent High alarms by default, for use with `simple` alarms.
	AlarmUrgentHigh *bool `json:"alarmUrgentHigh,omitempty"`
	// Enable/Disable client-side High alarms by default, for use with `simple` alarms.
	AlarmHigh *bool `json:"alarmHigh,omitempty"`
	// Enable/Disable client-side Low alarms by default, for use with `simple` alarms.
	AlarmLow *bool `json:"alarmLow,omitempty"`
	// Enable/Disable client-side Urgent Low alarms by default, for use with `simple` alarms.
	AlarmUrgentLow *bool `json:"alarmUrgentLow,omitempty"`
	// Enable/Disable client-side stale data alarms by default.
	AlarmTimeagoWarn *bool `json:"alarmTimeagoWarn,omitempty"`
	// Number of minutes before a stale data warning is generated.
	AlarmTimeagoWarnMins *float32 `json:"alarmTimeagoWarnMins,omitempty"`
	// Enable/Disable client-side urgent stale data alarms by default.
	AlarmTimeagoUrgent *bool `json:"alarmTimeagoUrgent,omitempty"`
	// Number of minutes before a stale data warning is generated.
	AlarmTimeagoUrgentMins *float32 `json:"alarmTimeagoUrgentMins,omitempty"`
	// Enabled features
	Enable []string `json:"enable,omitempty"`
	Thresholds *Threshold `json:"thresholds,omitempty"`
}

// NewSettings instantiates a new Settings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettings() *Settings {
	this := Settings{}
	return &this
}

// NewSettingsWithDefaults instantiates a new Settings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsWithDefaults() *Settings {
	this := Settings{}
	return &this
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *Settings) GetUnits() string {
	if o == nil || IsNil(o.Units) {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetUnitsOk() (*string, bool) {
	if o == nil || IsNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *Settings) HasUnits() bool {
	if o != nil && !IsNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *Settings) SetUnits(v string) {
	o.Units = &v
}

// GetTimeFormat returns the TimeFormat field value if set, zero value otherwise.
func (o *Settings) GetTimeFormat() float32 {
	if o == nil || IsNil(o.TimeFormat) {
		var ret float32
		return ret
	}
	return *o.TimeFormat
}

// GetTimeFormatOk returns a tuple with the TimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetTimeFormatOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeFormat) {
		return nil, false
	}
	return o.TimeFormat, true
}

// HasTimeFormat returns a boolean if a field has been set.
func (o *Settings) HasTimeFormat() bool {
	if o != nil && !IsNil(o.TimeFormat) {
		return true
	}

	return false
}

// SetTimeFormat gets a reference to the given float32 and assigns it to the TimeFormat field.
func (o *Settings) SetTimeFormat(v float32) {
	o.TimeFormat = &v
}

// GetCustomTitle returns the CustomTitle field value if set, zero value otherwise.
func (o *Settings) GetCustomTitle() string {
	if o == nil || IsNil(o.CustomTitle) {
		var ret string
		return ret
	}
	return *o.CustomTitle
}

// GetCustomTitleOk returns a tuple with the CustomTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetCustomTitleOk() (*string, bool) {
	if o == nil || IsNil(o.CustomTitle) {
		return nil, false
	}
	return o.CustomTitle, true
}

// HasCustomTitle returns a boolean if a field has been set.
func (o *Settings) HasCustomTitle() bool {
	if o != nil && !IsNil(o.CustomTitle) {
		return true
	}

	return false
}

// SetCustomTitle gets a reference to the given string and assigns it to the CustomTitle field.
func (o *Settings) SetCustomTitle(v string) {
	o.CustomTitle = &v
}

// GetNightMode returns the NightMode field value if set, zero value otherwise.
func (o *Settings) GetNightMode() bool {
	if o == nil || IsNil(o.NightMode) {
		var ret bool
		return ret
	}
	return *o.NightMode
}

// GetNightModeOk returns a tuple with the NightMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetNightModeOk() (*bool, bool) {
	if o == nil || IsNil(o.NightMode) {
		return nil, false
	}
	return o.NightMode, true
}

// HasNightMode returns a boolean if a field has been set.
func (o *Settings) HasNightMode() bool {
	if o != nil && !IsNil(o.NightMode) {
		return true
	}

	return false
}

// SetNightMode gets a reference to the given bool and assigns it to the NightMode field.
func (o *Settings) SetNightMode(v bool) {
	o.NightMode = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *Settings) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *Settings) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *Settings) SetTheme(v string) {
	o.Theme = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *Settings) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *Settings) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *Settings) SetLanguage(v string) {
	o.Language = &v
}

// GetShowPlugins returns the ShowPlugins field value if set, zero value otherwise.
func (o *Settings) GetShowPlugins() string {
	if o == nil || IsNil(o.ShowPlugins) {
		var ret string
		return ret
	}
	return *o.ShowPlugins
}

// GetShowPluginsOk returns a tuple with the ShowPlugins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetShowPluginsOk() (*string, bool) {
	if o == nil || IsNil(o.ShowPlugins) {
		return nil, false
	}
	return o.ShowPlugins, true
}

// HasShowPlugins returns a boolean if a field has been set.
func (o *Settings) HasShowPlugins() bool {
	if o != nil && !IsNil(o.ShowPlugins) {
		return true
	}

	return false
}

// SetShowPlugins gets a reference to the given string and assigns it to the ShowPlugins field.
func (o *Settings) SetShowPlugins(v string) {
	o.ShowPlugins = &v
}

// GetShowRawbg returns the ShowRawbg field value if set, zero value otherwise.
func (o *Settings) GetShowRawbg() string {
	if o == nil || IsNil(o.ShowRawbg) {
		var ret string
		return ret
	}
	return *o.ShowRawbg
}

// GetShowRawbgOk returns a tuple with the ShowRawbg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetShowRawbgOk() (*string, bool) {
	if o == nil || IsNil(o.ShowRawbg) {
		return nil, false
	}
	return o.ShowRawbg, true
}

// HasShowRawbg returns a boolean if a field has been set.
func (o *Settings) HasShowRawbg() bool {
	if o != nil && !IsNil(o.ShowRawbg) {
		return true
	}

	return false
}

// SetShowRawbg gets a reference to the given string and assigns it to the ShowRawbg field.
func (o *Settings) SetShowRawbg(v string) {
	o.ShowRawbg = &v
}

// GetAlarmTypes returns the AlarmTypes field value if set, zero value otherwise.
func (o *Settings) GetAlarmTypes() []string {
	if o == nil || IsNil(o.AlarmTypes) {
		var ret []string
		return ret
	}
	return o.AlarmTypes
}

// GetAlarmTypesOk returns a tuple with the AlarmTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AlarmTypes) {
		return nil, false
	}
	return o.AlarmTypes, true
}

// HasAlarmTypes returns a boolean if a field has been set.
func (o *Settings) HasAlarmTypes() bool {
	if o != nil && !IsNil(o.AlarmTypes) {
		return true
	}

	return false
}

// SetAlarmTypes gets a reference to the given []string and assigns it to the AlarmTypes field.
func (o *Settings) SetAlarmTypes(v []string) {
	o.AlarmTypes = v
}

// GetAlarmUrgentHigh returns the AlarmUrgentHigh field value if set, zero value otherwise.
func (o *Settings) GetAlarmUrgentHigh() bool {
	if o == nil || IsNil(o.AlarmUrgentHigh) {
		var ret bool
		return ret
	}
	return *o.AlarmUrgentHigh
}

// GetAlarmUrgentHighOk returns a tuple with the AlarmUrgentHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmUrgentHighOk() (*bool, bool) {
	if o == nil || IsNil(o.AlarmUrgentHigh) {
		return nil, false
	}
	return o.AlarmUrgentHigh, true
}

// HasAlarmUrgentHigh returns a boolean if a field has been set.
func (o *Settings) HasAlarmUrgentHigh() bool {
	if o != nil && !IsNil(o.AlarmUrgentHigh) {
		return true
	}

	return false
}

// SetAlarmUrgentHigh gets a reference to the given bool and assigns it to the AlarmUrgentHigh field.
func (o *Settings) SetAlarmUrgentHigh(v bool) {
	o.AlarmUrgentHigh = &v
}

// GetAlarmHigh returns the AlarmHigh field value if set, zero value otherwise.
func (o *Settings) GetAlarmHigh() bool {
	if o == nil || IsNil(o.AlarmHigh) {
		var ret bool
		return ret
	}
	return *o.AlarmHigh
}

// GetAlarmHighOk returns a tuple with the AlarmHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmHighOk() (*bool, bool) {
	if o == nil || IsNil(o.AlarmHigh) {
		return nil, false
	}
	return o.AlarmHigh, true
}

// HasAlarmHigh returns a boolean if a field has been set.
func (o *Settings) HasAlarmHigh() bool {
	if o != nil && !IsNil(o.AlarmHigh) {
		return true
	}

	return false
}

// SetAlarmHigh gets a reference to the given bool and assigns it to the AlarmHigh field.
func (o *Settings) SetAlarmHigh(v bool) {
	o.AlarmHigh = &v
}

// GetAlarmLow returns the AlarmLow field value if set, zero value otherwise.
func (o *Settings) GetAlarmLow() bool {
	if o == nil || IsNil(o.AlarmLow) {
		var ret bool
		return ret
	}
	return *o.AlarmLow
}

// GetAlarmLowOk returns a tuple with the AlarmLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmLowOk() (*bool, bool) {
	if o == nil || IsNil(o.AlarmLow) {
		return nil, false
	}
	return o.AlarmLow, true
}

// HasAlarmLow returns a boolean if a field has been set.
func (o *Settings) HasAlarmLow() bool {
	if o != nil && !IsNil(o.AlarmLow) {
		return true
	}

	return false
}

// SetAlarmLow gets a reference to the given bool and assigns it to the AlarmLow field.
func (o *Settings) SetAlarmLow(v bool) {
	o.AlarmLow = &v
}

// GetAlarmUrgentLow returns the AlarmUrgentLow field value if set, zero value otherwise.
func (o *Settings) GetAlarmUrgentLow() bool {
	if o == nil || IsNil(o.AlarmUrgentLow) {
		var ret bool
		return ret
	}
	return *o.AlarmUrgentLow
}

// GetAlarmUrgentLowOk returns a tuple with the AlarmUrgentLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmUrgentLowOk() (*bool, bool) {
	if o == nil || IsNil(o.AlarmUrgentLow) {
		return nil, false
	}
	return o.AlarmUrgentLow, true
}

// HasAlarmUrgentLow returns a boolean if a field has been set.
func (o *Settings) HasAlarmUrgentLow() bool {
	if o != nil && !IsNil(o.AlarmUrgentLow) {
		return true
	}

	return false
}

// SetAlarmUrgentLow gets a reference to the given bool and assigns it to the AlarmUrgentLow field.
func (o *Settings) SetAlarmUrgentLow(v bool) {
	o.AlarmUrgentLow = &v
}

// GetAlarmTimeagoWarn returns the AlarmTimeagoWarn field value if set, zero value otherwise.
func (o *Settings) GetAlarmTimeagoWarn() bool {
	if o == nil || IsNil(o.AlarmTimeagoWarn) {
		var ret bool
		return ret
	}
	return *o.AlarmTimeagoWarn
}

// GetAlarmTimeagoWarnOk returns a tuple with the AlarmTimeagoWarn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmTimeagoWarnOk() (*bool, bool) {
	if o == nil || IsNil(o.AlarmTimeagoWarn) {
		return nil, false
	}
	return o.AlarmTimeagoWarn, true
}

// HasAlarmTimeagoWarn returns a boolean if a field has been set.
func (o *Settings) HasAlarmTimeagoWarn() bool {
	if o != nil && !IsNil(o.AlarmTimeagoWarn) {
		return true
	}

	return false
}

// SetAlarmTimeagoWarn gets a reference to the given bool and assigns it to the AlarmTimeagoWarn field.
func (o *Settings) SetAlarmTimeagoWarn(v bool) {
	o.AlarmTimeagoWarn = &v
}

// GetAlarmTimeagoWarnMins returns the AlarmTimeagoWarnMins field value if set, zero value otherwise.
func (o *Settings) GetAlarmTimeagoWarnMins() float32 {
	if o == nil || IsNil(o.AlarmTimeagoWarnMins) {
		var ret float32
		return ret
	}
	return *o.AlarmTimeagoWarnMins
}

// GetAlarmTimeagoWarnMinsOk returns a tuple with the AlarmTimeagoWarnMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmTimeagoWarnMinsOk() (*float32, bool) {
	if o == nil || IsNil(o.AlarmTimeagoWarnMins) {
		return nil, false
	}
	return o.AlarmTimeagoWarnMins, true
}

// HasAlarmTimeagoWarnMins returns a boolean if a field has been set.
func (o *Settings) HasAlarmTimeagoWarnMins() bool {
	if o != nil && !IsNil(o.AlarmTimeagoWarnMins) {
		return true
	}

	return false
}

// SetAlarmTimeagoWarnMins gets a reference to the given float32 and assigns it to the AlarmTimeagoWarnMins field.
func (o *Settings) SetAlarmTimeagoWarnMins(v float32) {
	o.AlarmTimeagoWarnMins = &v
}

// GetAlarmTimeagoUrgent returns the AlarmTimeagoUrgent field value if set, zero value otherwise.
func (o *Settings) GetAlarmTimeagoUrgent() bool {
	if o == nil || IsNil(o.AlarmTimeagoUrgent) {
		var ret bool
		return ret
	}
	return *o.AlarmTimeagoUrgent
}

// GetAlarmTimeagoUrgentOk returns a tuple with the AlarmTimeagoUrgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmTimeagoUrgentOk() (*bool, bool) {
	if o == nil || IsNil(o.AlarmTimeagoUrgent) {
		return nil, false
	}
	return o.AlarmTimeagoUrgent, true
}

// HasAlarmTimeagoUrgent returns a boolean if a field has been set.
func (o *Settings) HasAlarmTimeagoUrgent() bool {
	if o != nil && !IsNil(o.AlarmTimeagoUrgent) {
		return true
	}

	return false
}

// SetAlarmTimeagoUrgent gets a reference to the given bool and assigns it to the AlarmTimeagoUrgent field.
func (o *Settings) SetAlarmTimeagoUrgent(v bool) {
	o.AlarmTimeagoUrgent = &v
}

// GetAlarmTimeagoUrgentMins returns the AlarmTimeagoUrgentMins field value if set, zero value otherwise.
func (o *Settings) GetAlarmTimeagoUrgentMins() float32 {
	if o == nil || IsNil(o.AlarmTimeagoUrgentMins) {
		var ret float32
		return ret
	}
	return *o.AlarmTimeagoUrgentMins
}

// GetAlarmTimeagoUrgentMinsOk returns a tuple with the AlarmTimeagoUrgentMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetAlarmTimeagoUrgentMinsOk() (*float32, bool) {
	if o == nil || IsNil(o.AlarmTimeagoUrgentMins) {
		return nil, false
	}
	return o.AlarmTimeagoUrgentMins, true
}

// HasAlarmTimeagoUrgentMins returns a boolean if a field has been set.
func (o *Settings) HasAlarmTimeagoUrgentMins() bool {
	if o != nil && !IsNil(o.AlarmTimeagoUrgentMins) {
		return true
	}

	return false
}

// SetAlarmTimeagoUrgentMins gets a reference to the given float32 and assigns it to the AlarmTimeagoUrgentMins field.
func (o *Settings) SetAlarmTimeagoUrgentMins(v float32) {
	o.AlarmTimeagoUrgentMins = &v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *Settings) GetEnable() []string {
	if o == nil || IsNil(o.Enable) {
		var ret []string
		return ret
	}
	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetEnableOk() ([]string, bool) {
	if o == nil || IsNil(o.Enable) {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *Settings) HasEnable() bool {
	if o != nil && !IsNil(o.Enable) {
		return true
	}

	return false
}

// SetEnable gets a reference to the given []string and assigns it to the Enable field.
func (o *Settings) SetEnable(v []string) {
	o.Enable = v
}

// GetThresholds returns the Thresholds field value if set, zero value otherwise.
func (o *Settings) GetThresholds() Threshold {
	if o == nil || IsNil(o.Thresholds) {
		var ret Threshold
		return ret
	}
	return *o.Thresholds
}

// GetThresholdsOk returns a tuple with the Thresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Settings) GetThresholdsOk() (*Threshold, bool) {
	if o == nil || IsNil(o.Thresholds) {
		return nil, false
	}
	return o.Thresholds, true
}

// HasThresholds returns a boolean if a field has been set.
func (o *Settings) HasThresholds() bool {
	if o != nil && !IsNil(o.Thresholds) {
		return true
	}

	return false
}

// SetThresholds gets a reference to the given Threshold and assigns it to the Thresholds field.
func (o *Settings) SetThresholds(v Threshold) {
	o.Thresholds = &v
}

func (o Settings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Settings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	if !IsNil(o.TimeFormat) {
		toSerialize["timeFormat"] = o.TimeFormat
	}
	if !IsNil(o.CustomTitle) {
		toSerialize["customTitle"] = o.CustomTitle
	}
	if !IsNil(o.NightMode) {
		toSerialize["nightMode"] = o.NightMode
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.ShowPlugins) {
		toSerialize["showPlugins"] = o.ShowPlugins
	}
	if !IsNil(o.ShowRawbg) {
		toSerialize["showRawbg"] = o.ShowRawbg
	}
	if !IsNil(o.AlarmTypes) {
		toSerialize["alarmTypes"] = o.AlarmTypes
	}
	if !IsNil(o.AlarmUrgentHigh) {
		toSerialize["alarmUrgentHigh"] = o.AlarmUrgentHigh
	}
	if !IsNil(o.AlarmHigh) {
		toSerialize["alarmHigh"] = o.AlarmHigh
	}
	if !IsNil(o.AlarmLow) {
		toSerialize["alarmLow"] = o.AlarmLow
	}
	if !IsNil(o.AlarmUrgentLow) {
		toSerialize["alarmUrgentLow"] = o.AlarmUrgentLow
	}
	if !IsNil(o.AlarmTimeagoWarn) {
		toSerialize["alarmTimeagoWarn"] = o.AlarmTimeagoWarn
	}
	if !IsNil(o.AlarmTimeagoWarnMins) {
		toSerialize["alarmTimeagoWarnMins"] = o.AlarmTimeagoWarnMins
	}
	if !IsNil(o.AlarmTimeagoUrgent) {
		toSerialize["alarmTimeagoUrgent"] = o.AlarmTimeagoUrgent
	}
	if !IsNil(o.AlarmTimeagoUrgentMins) {
		toSerialize["alarmTimeagoUrgentMins"] = o.AlarmTimeagoUrgentMins
	}
	if !IsNil(o.Enable) {
		toSerialize["enable"] = o.Enable
	}
	if !IsNil(o.Thresholds) {
		toSerialize["thresholds"] = o.Thresholds
	}
	return toSerialize, nil
}

type NullableSettings struct {
	value *Settings
	isSet bool
}

func (v NullableSettings) Get() *Settings {
	return v.value
}

func (v *NullableSettings) Set(val *Settings) {
	v.value = val
	v.isSet = true
}

func (v NullableSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettings(val *Settings) *NullableSettings {
	return &NullableSettings{value: val, isSet: true}
}

func (v NullableSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


